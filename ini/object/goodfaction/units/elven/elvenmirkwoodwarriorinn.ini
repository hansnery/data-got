Object MirkwoodWarriorInn
    ; ***ART Parameters ***
    SelectPortrait         = upgreenwoodwarriorinn
    ButtonImage = uigreenwoodwarriorinn

	Draw = W3DHordeModelDraw ModuleTag_01

	  OkToChangeModelColor = Yes
	  
    StaticModelLODMode = yes ; Will append M or L to the skin name depending on GameLOD

		RandomTextureFixedRandomIndex	= Yes
    
;;====================== MODELS ================================================================
		DefaultModelConditionState
			Model				= tugreenwar_bow
			Skeleton			= RUElfWar_SKL
			WeaponLaunchBone		= PRIMARY ARROW
			WeaponLaunchBone		= SECONDARY ARROWNOCK	; when upgraded to flaming arrow
		End

; --------- With Sword ------------
		ModelConditionState			= WEAPONSET_TOGGLE_1
			Model				= tugreenwar_swrd
			Skeleton			= RUElfWar_SKL
		End

; --------- With Fire arrows Upgrade  ------------
		ModelConditionState			= WEAPONSET_TOGGLE_1 WEAPONSET_PLAYER_UPGRADE USER_4
			Model				= tugreenwar_bow
			Skeleton			= RUElfWar_SKL
			WeaponLaunchBone		= PRIMARY ARROW
			WeaponLaunchBone		= SECONDARY ARROWNOCK	; when upgraded to flaming arrow
		;	ParticleSysBone			= FireArowTip arrowFire FollowBone:Yes
		;	ParticleSysBone			= FireArowTip arrowFire FollowBone:Yes
		End
		

; --------- With Fire arrows Upgrade  ------------
		ModelConditionState			= WEAPONSET_PLAYER_UPGRADE USER_4
			Model				= tugreenwar_bow
			Skeleton			= RUElfWar_SKL
			WeaponLaunchBone		= PRIMARY ARROW
			WeaponLaunchBone		= SECONDARY ARROWNOCK	; when upgraded to flaming arrow
		;	ParticleSysBone			= FireArowTip arrowFire FollowBone:Yes
		;	ParticleSysBone			= FireArowTip arrowFire FollowBone:Yes
		End

;;================== ANIMATIONS =================================================================

		; ------ Flying ------- ;

		AnimationState        			= STUNNED_STANDING_UP WEAPONSET_TOGGLE_1
			StateName			= STATE_GetUp
			Animation           		= Sword
				AnimationName       	= RUElfWar_GTPSX1
				AnimationMode       	= ONCE
			End
			Animation           		= WantSword
				AnimationName       	= RUElfWar_GTPB
				AnimationMode       	= ONCE
			End
			Flags				= MAINTAIN_FRAME_ACROSS_STATES4
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				PrevAnim = CurDrawablePrevAnimation()
				if PrevState == "STATE_GetUp" or PrevState == "STATE_Land"
				then
					if PrevAnim == "Bow" or PrevAnim == "WantSword"
					then	
						CurDrawableShowSubObject("arrow")
						CurDrawableShowSubObject("arrownock")
						return "WantSword"
					end
				end
				
				CurDrawableHideSubObject("ArrowNock")
				CurDrawableHideSubObject("arrow")
				return "Sword"
			EndScript
		End
		
		AnimationState        			= STUNNED_STANDING_UP
			StateName			= STATE_GetUp
			Animation           		= Bow
				AnimationName       	= RUElfWar_GTPB
				AnimationMode       	= ONCE
			End
			Animation           		= WantBow
				AnimationName       	= RUElfWar_GTPSX1
				AnimationMode       	= ONCE
			End
			Flags				= MAINTAIN_FRAME_ACROSS_STATES4
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				PrevAnim = CurDrawablePrevAnimation()
				if PrevState == "STATE_GetUp" or PrevState == "STATE_Land"
				then
					if PrevAnim == "WantBow" or PrevAnim == "Sword"
					then
						CurDrawableHideSubObject("ArrowNock")
						CurDrawableHideSubObject("arrow")
						return "WantBow"
					end
				else
					CurDrawableShowSubObject("arrow")
					CurDrawableShowSubObject("arrownock")
					return "Bow"
				end
			EndScript
		End

		AnimationState        			= STUNNED WEAPONSET_TOGGLE_1
			StateName			= STATE_Land
			Animation           		= Sword
				AnimationName       	= RUElfWar_LNDB
				AnimationMode       	= ONCE
			End
			Animation           		= WantSword
				AnimationName       	= RUElfWar_LNDA
				AnimationMode       	= ONCE
			End
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				PrevAnim = CurDrawablePrevAnimation()
				if PrevState == "STATE_Fly"
				then
					if PrevAnim == "WantSword" or PrevAnim == "Bow"
					then
						CurDrawableShowSubObject("arrow")
						CurDrawableShowSubObject("arrownock")
						return "WantSword"
					end
				end
				Flags			= MAINTAIN_FRAME_ACROSS_STATES3
				CurDrawableHideSubObject("ArrowNock")
				CurDrawableHideSubObject("arrow")
				return "Sword"
			EndScript
		End
		
		AnimationState        			= STUNNED
			StateName			= STATE_Land
			Animation           		= Bow
				AnimationName       	= RUElfWar_LNDA
				AnimationMode       	= ONCE
			End
			Animation           		= WantBow
				AnimationName       	= RUElfWar_LNDB
				AnimationMode       	= ONCE
			End
			Flags				= MAINTAIN_FRAME_ACROSS_STATES3
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				PrevAnim = CurDrawablePrevAnimation()
				if PrevState == "STATE_Fly"
				then
					if PrevAnim == "WantBow" or PrevAnim == "Sword"
					then
						CurDrawableHideSubObject("ArrowNock")
						CurDrawableHideSubObject("arrow")
						return "WantBow"
					end
				end
				
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("arrownock")
				return "Bow"
			EndScript
		End

		AnimationState        			= STUNNED_FLAILING WEAPONSET_TOGGLE_1
			StateName			= STATE_Fly
			Animation           		= Sword
				AnimationName       	= RUElfWar_FLYB
				AnimationMode       	= LOOP
			End
			Animation           		= WantSword
				AnimationName       	= RUElfWar_FLYA
				AnimationMode       	= LOOP
			End
			Flags				= MAINTAIN_FRAME_ACROSS_STATES2
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				PrevAnim = CurDrawablePrevAnimation()
				if PrevState == "Ready_Bow" or PrevState == "Moving_Bow" or PrevState == "Bored_Bow"								;;;;;;#TODO put in various bow states here
				then
					CurDrawableShowSubObject("arrow")
					CurDrawableShowSubObject("arrownock")
					return "WantSword"
				elseif PrevState == "STATE_Fly"
				then
					if PrevAnim == "Bow" or PrevAnim == "WantSword"
					then
						CurDrawableShowSubObject("arrow")
						CurDrawableShowSubObject("arrownock")
						return "WantSword"
					end
				end
					
				CurDrawableHideSubObject("ArrowNock")
				CurDrawableHideSubObject("arrow")
				return "Sword"
			EndScript
		End
		
		AnimationState        			= STUNNED_FLAILING
			StateName			= STATE_Fly
			Animation           		= Bow
				AnimationName       	= RUElfWar_FLYA
				AnimationMode       	= LOOP
			End
			Animation           		= WantBow
				AnimationName       	= RUElfWar_FLYB
				AnimationMode       	= LOOP
			End
			Flags				= MAINTAIN_FRAME_ACROSS_STATES2
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				PrevAnim = CurDrawablePrevAnimation()
				if PrevState == "Ready_Sword" or PrevState == "Moving_Sword" or PrevState == "Bored_Sword"							;;;;;;#TODO put in various sword states here
				then
					CurDrawableHideSubObject("ArrowNock")
					CurDrawableHideSubObject("arrow")
					return "WantBow"
				elseif PrevState == "STATE_Fly"
				then
					if PrevAnim == "Sword" or PrevAnim == "WantBow"
					then
						CurDrawableHideSubObject("ArrowNock")
						CurDrawableHideSubObject("arrow")
						return "WantBow"
					end
				end

				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("arrownock")
				return "Bow"
			EndScript
		End
		
		
		; ------ Dying ------- ;

		AnimationState        			= DYING WEAPONSET_TOGGLE_1
			Animation           		= Sword1
				AnimationName       	= RUElfWar_DIESv5
				AnimationMode       	= ONCE
			End
			Animation           		= Sword2
				AnimationName       	= RUElfWar_DIESV4
				AnimationMode       	= ONCE
			End
			Animation           		= WantSword
				AnimationName       	= RUElfWar_LNDA
				AnimationMode       	= ONCE
			End
			
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				PrevAnim = CurDrawablePrevAnimation()
				if PrevState == "STATE_Fly"
				then
					CurDrawableShowSubObject("arrow")
					CurDrawableShowSubObject("arrownock")
					return "WantSword"
				end
			
				CurDrawableHideSubObject("ArrowNock")
				CurDrawableHideSubObject("arrow")
				if GetClientRandomNumberReal(0,2) < 1
				then
					return "Sword1"
				else
					return "Sword2"
				end
			EndScript
		End
		
		AnimationState        			= DYING
			Animation           		= Bow1
				AnimationName       	= RUElfWar_DIEB
				AnimationMode       	= ONCE
			End
			Animation           		= Bow2
				AnimationName       	= RUElfWar_DIEBV5
				AnimationMode       	= ONCE
			End
			Animation           		= WantBow
				AnimationName       	= RUElfWar_LNDB
				AnimationMode       	= ONCE
			End
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				PrevAnim = CurDrawablePrevAnimation()
				
				if PrevState == "STATE_Fly"
				then
					CurDrawableHideSubObject("ArrowNock")
					CurDrawableHideSubObject("arrow")
					return "WantBow"
				end
				
				if GetClientRandomNumberReal(0,2) < 1
				then
					CurDrawableShowSubObject("arrow")
					CurDrawableShowSubObject("arrownock")
					return "Bow1"
				else
					CurDrawableShowSubObject("arrow")
					CurDrawableShowSubObject("arrownock")
					return "Bow2"
				end
			EndScript
		End
		
		
;;======== TERROR

		AnimationState				= MOVING EMOTION_TERROR WEAPONSET_TOGGLE_1
			StateName			= Moving_Sword
			Animation			= Terror
				AnimationName		= RUElfWar_RUNN
				AnimationMode		= LOOP
				Distance		= 40
			End
			Animation			= finishrun_b
				AnimationName       	= RUElfWar_RUNB
				AnimationMode       	= ONCE
				AnimationBlendTime	= 0
				Distance		= 40
			End
			Animation			= runtrans_bs
				AnimationName       	= RUElfWar_RUNC
				AnimationMode       	= ONCE
				AnimationBlendTime	= 5
				Distance		= 70
			End
			Animation			= runtrans_sb_finish
				AnimationName       	= RUElfWar_RUNT
				AnimationMode       	= ONCE
				AnimationBlendTime	= 0
				Distance		= 70
			End
			Animation			= runnoblend_s
				AnimationName       	= RUElfWar_RUNN
				AnimationMode       	= LOOP
				AnimationBlendTime	= 0
				Distance		= 40
			End
			Flags				= RESTART_ANIM_WHEN_COMPLETE MAINTAIN_FRAME_ACROSS_STATES
			BeginScript
				PrevAnim	= CurDrawablePrevAnimation()
				PrevState	= CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("ARROW")
				CurDrawableHideSubObject("ARROWNOCK")
				
				if PrevState == "Moving_Bow"
				then
					if PrevAnim == "runtrans_sb"
					then
						return "runtrans_sb_finish"
					elseif PrevAnim == "finishrun_s"
					then
						return "runnoblend_s"
					else
						return "finishrun_b"
					end
				elseif PrevAnim == "finishrun_b" or PrevAnim == "runtrans_sb_finish"
				then
					return "runtrans_bs"
				elseif PrevAnim == "runtrans_bs" or PrevAnim == "run_s" or PrevAnim == "runnoblend_s"
				then
					return "runnoblend_s"
				else
					return "Terror"
				end				
			EndScript
		End
		AnimationState				= MOVING EMOTION_TERROR
			StateName			= Moving_Bow
			Animation			= RunAway_3
				AnimationName		= RUElfWar_RUNOT3
				AnimationMode		= ONCE
				Distance		= 40
			End
			Animation			= RunAway_2
				AnimationName		= RUElfWar_RUNOT4
				AnimationMode		= ONCE
				Distance		= 40
			End
			Animation			= RunAway
				AnimationName		= RUElfWar_RUNB
				AnimationMode		= ONCE
				Distance		= 40
			End
			Animation			= finishrun_s
				AnimationName       	= RUElfWar_RUNN
				AnimationMode       	= ONCE
				AnimationBlendTime	= 0
				Distance		= 40
			End
			Animation			= runtrans_sb
				AnimationName       	= RUElfWar_RUNT
				AnimationMode       	= ONCE
				AnimationBlendTime	= 5
				Distance		= 70
			End
			Animation			= runtrans_bs_finish
				AnimationName       	= RUElfWar_RUNC
				AnimationMode       	= ONCE
				AnimationBlendTime	= 0
				Distance		= 70
			End
			Animation			= RunAway_noblend
				AnimationName		= RUElfWar_RUNB
				AnimationMode		= ONCE
				AnimationBlendTime	= 0
				Distance		= 40
			End
			Flags				= RESTART_ANIM_WHEN_COMPLETE MAINTAIN_FRAME_ACROSS_STATES
			BeginScript
				PrevAnim	= CurDrawablePrevAnimation()
				PrevState	= CurDrawablePrevAnimationState()
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("arrownock")
				
				if PrevState == "Moving_Sword"
				then
					if PrevAnim == "runtrans_bs"
					then
						return "runtrans_bs_finish"
					elseif PrevAnim == "finishrun_b"
					then
						return "RunAway_noblend"
					else
						return "finishrun_s"
					end
				elseif PrevAnim == "finishrun_s" or PrevAnim == "runtrans_bs_finish"
				then
					return "runtrans_sb"
				elseif PrevAnim == "runtrans_sb" or PrevAnim == "run_b" or PrevAnim == "runnoblend_b"
				then
					return "RunAway_noblend"
				else
					Num = GetClientRandomNumberReal(0,7)
					if Num < 1 
					then
						return "RunAway_2"
					elseif Num > 6
					then
						return "RunAway_3"
					else
						return "RunAway"
					end
				end			
			EndScript
		End


		; ------ Attacking ------- ;
		
		AnimationState        			= FIRING_OR_PREATTACK_A WEAPONSET_TOGGLE_1
			StateName			= Ready_Sword
			
			Animation           		= AttackWithSwordA
				AnimationName       	= RUElfWar_ATKSV2
				AnimationMode       	= ONCE
				UseWeaponTiming		= Yes
			End
			Animation           		= AttackWithSwordB
				AnimationName       	= RUElfWar_ATKS
				AnimationMode       	= ONCE
				UseWeaponTiming		= Yes
			End
			Animation           		= AttackWithSwordD
				AnimationName       	= RUElfWar_ATKSV4
				AnimationMode       	= ONCE
				UseWeaponTiming		= Yes
			End
			BeginScript
				CurDrawableHideSubObject("ArrowNock")
				CurDrawableHideSubObject("arrow")
			EndScript
		End
;;---------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
		AnimationState					= PREATTACK_A 
			Animation				= ReadyToDrawn
				AnimationName			= ruelfwar_atkaa1
				AnimationMode			= ONCE
				AnimationBlendTime		= 20				; Must be 0 blend time otherwise the arrow will linger for the duration of the blend!
			End
			
			BeginScript
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("ArrowNock")
			EndScript
		End

		AnimationState					= FIRING_OR_RELOADING_A
			StateName				= STATE_Firing
			Animation				= OneFrameOfShooting
				AnimationName			= ruelfwar_atkaa2
				AnimationMode			= ONCE
				AnimationBlendTime		= 0
				AnimationSpeedFactorRange	= 1.5 1.5
			End
			Flags					= START_FRAME_FIRST			
			BeginScript
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("ArrowNock")
			EndScript
		End
;;--------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
		AnimationState					= PREATTACK_C WEAPONSET_TOGGLE_1
			Animation				= ReadyToDrawn
				AnimationName			= ruelfwar_atkaa1
				AnimationMode			= ONCE
				AnimationBlendTime		= 20				; Must be 0 blend time otherwise the arrow will linger for the duration of the blend!
			End
			
			BeginScript
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("ArrowNock")
			EndScript
		End

		AnimationState					= FIRING_OR_RELOADING_C WEAPONSET_TOGGLE_1
			StateName				= STATE_Firing
			Animation				= OneFrameOfShooting
				AnimationName			= ruelfwar_atkaa2
				AnimationMode			= ONCE
				AnimationBlendTime		= 0
				AnimationSpeedFactorRange	= 1.5 1.5
			End
			Flags					= START_FRAME_FIRST			
			BeginScript
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("ArrowNock")
			EndScript
		End

		
;;------------------------- BACKUP --------------------------------------------------------------------


		AnimationState					= MOVING BACKING_UP WEAPONSET_TOGGLE_1
			StateName				= STATE_BackingUp
			Animation				= Sword
				AnimationName			= RUElfWar_BAKS
				AnimationMode			= LOOP
			End
			Animation				= WantSword
				AnimationName			= RUElfWar_BAKB
				AnimationMode			= LOOP
			End
			Flags					= MAINTAIN_FRAME_ACROSS_STATES4
			BeginScript
				CurDrawableHideSubObject("ARROW")
				CurDrawableHideSubObject("ARROWNOCK")
				PrevAnim	= CurDrawablePrevAnimation()
				PrevState	= CurDrawablePrevAnimationState()
				if PrevState == "STATE_BackingUp"
				then
					if PrevAnim == "Bow" or PrevAnim == "WantSword"
					then
						return "WantSword"
					end
				end
				
				return "Sword"			
			EndScript
		End
		AnimationState					= MOVING BACKING_UP
			StateName				= STATE_BackingUp
			Animation				= Bow
				AnimationName			= RUElfWar_BAKB
				AnimationMode			= LOOP
			End
			Animation				= WantBow
				AnimationName			= RUElfWar_BAKS
				AnimationMode			= LOOP
			End
			Flags					= MAINTAIN_FRAME_ACROSS_STATES4
			BeginScript
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("arrownock")
				PrevAnim	= CurDrawablePrevAnimation()
				PrevState	= CurDrawablePrevAnimationState()
				if PrevState == "STATE_BackingUp"
				then
					if PrevAnim == "WantBow" or PrevAnim == "Sword"
					then
						return "WantBow"
					end
				end
				
				return "Bow"
			EndScript
		End
	
		; ------------ Moving ------------- ;
		
		AnimationState        			= MOVING WEAPONSET_TOGGLE_1
			StateName			= Moving_Sword
			SimilarRestart			= Yes
			Animation           		= run_s
				AnimationName       	= RUElfWar_RUNS
				AnimationMode       	= LOOP
				Distance		= 40
			End
			Animation			= finishrun_b
				AnimationName       	= RUElfWar_RUNB
				AnimationMode       	= ONCE
				AnimationBlendTime	= 0
				Distance		= 40
			End
			Animation			= runtrans_bs
				AnimationName       	= RUElfWar_RUNC
				AnimationMode       	= ONCE
				AnimationBlendTime	= 0
				Distance		= 70
			End
			Animation			= runtrans_sb_finish
				AnimationName       	= RUElfWar_RUNT
				AnimationMode       	= ONCE
				AnimationBlendTime	= 0
				Distance		= 70
			End
			Animation			= runnoblend_s
				AnimationName       	= RUElfWar_RUNS
				AnimationMode       	= LOOP
				AnimationBlendTime	= 0
				Distance		= 40
			End
			Flags = MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevAnim	= CurDrawablePrevAnimation()
				PrevState	= CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("ARROW")
				CurDrawableHideSubObject("ARROWNOCK")
				
				if PrevState == "Moving_Bow"
				then
					if PrevAnim == "runtrans_sb"
					then
						return "runtrans_sb_finish"
					elseif PrevAnim == "finishrun_s"
					then
						return "runnoblend_s"
					else
						return "finishrun_b"
					end
				elseif PrevAnim == "finishrun_b" or PrevAnim == "runtrans_sb_finish" or PrevAnim == "WantSword"
				then
					return "runtrans_bs"
				elseif PrevAnim == "runtrans_bs" or PrevAnim == "run_s" or PrevAnim == "runnoblend_s"
				then
					return "runnoblend_s"
				else
					return "run_s"
				end				
			EndScript
		End
		
		AnimationState        			= MOVING
			StateName			= Moving_Bow
			SimilarRestart			= Yes
			Animation           		= run_b
				AnimationName       	= RUElfWar_RUNB
				AnimationMode       	= LOOP
				Distance		= 40
			End
			Animation			= finishrun_s
				AnimationName       	= RUElfWar_RUNS
				AnimationMode       	= ONCE
				AnimationBlendTime	= 0
				Distance		= 40
			End
			Animation			= runtrans_sb
				AnimationName       	= RUElfWar_RUNT
				AnimationMode       	= ONCE
				AnimationBlendTime	= 0
				Distance		= 70
			End
			Animation			= runtrans_bs_finish
				AnimationName       	= RUElfWar_RUNC
				AnimationMode       	= ONCE
				AnimationBlendTime	= 0
				Distance		= 70
			End
			Animation			= runnoblend_b
				AnimationName       	= RUElfWar_RUNB
				AnimationMode       	= LOOP
				AnimationBlendTime	= 0
				Distance		= 40
			End
			Flags = MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			
			BeginScript
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("arrownock")
				PrevAnim	= CurDrawablePrevAnimation()
				PrevState	= CurDrawablePrevAnimationState()
				
				if PrevState == "Moving_Sword"
				then
					if PrevAnim == "runtrans_bs"
					then
						return "runtrans_bs_finish"
					elseif PrevAnim == "finishrun_b"
					then
						return "runnoblend_b"
					else
						return "finishrun_s"
					end
				elseif PrevAnim == "finishrun_s" or PrevAnim == "runtrans_bs_finish" or PrevAnim == "WantBow"
				then
					return "runtrans_sb"
				elseif PrevAnim == "runtrans_sb" or PrevAnim == "run_b" or PrevAnim == "runnoblend_b"
				then
					return "runnoblend_b"
				else
					return "run_b"
				end				
			EndScript
		End
		
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;		
;		TransitionState       			= TRANS_SwordToBow_Moving
;			Animation           		= DrawBow
;				AnimationName       	= RUElfWar_RUNT
;				AnimationMode       	= ONCE
;			End
;			
;			BeginScript
;				CurDrawableAllowToContinue()
;			EndScript
;		End
;		
;		TransitionState       			= TRANS_BowToSword_Moving
;			Animation           		= DrawSword
;				AnimationName       	= RUElfWar_RUNC
;				AnimationMode       	= ONCE
;			End
;			
;			BeginScript
;				CurDrawableAllowToContinue()
;			EndScript
;		End
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;		
		
;;-----------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<

		AnimationState					= CONTINUOUS_FIRE_MEAN		;;;;;;;;;HACK TO STOP JITTERS
			Animation				= HangFrameWhileCoasting
				AnimationName			= ruelfwar_atkaa2
				AnimationMode			= MANUAL
				AnimationBlendTime		= 0
			End
			Flags					= START_FRAME_LAST
						
			BeginScript
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("ARROWNOCK")
				if CurDrawablePrevAnimationState() == "STATE_Firing" then CurDrawableAllowToContinue() end
			EndScript
			;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
			;;;;
			;;;;	VERY IMPORTANT ARCHER INFORMATION
			;;;;	THIS WILL STOP THE JITTERS, AND BEST
			;;;;	YET, IT'S A COMPLETE HACK! Just look above.
			;;;;	We say that if we get into this state
			;;;;	from firing, just continue to fire. DONE.
			;;;;
			;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		End
		
		AnimationState					= CONTINUOUS_FIRE_SLOW
			StateName				= Ready_Bow
			Animation				= PutAwayArrow
				AnimationName			= ruelfwar_atkaa3
				AnimationMode			= ONCE
			End
						
			BeginScript
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("ARROWNOCK")
			EndScript
		End
;;;--------------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<		
	
		AnimationState					= EMOTION_UNCONTROLLABLY_AFRAID WEAPONSET_TOGGLE_1
			StateName				= STATE_Emotion_Sword
			Animation				= Sword
				AnimationName			= RUElfWar_FERS
				AnimationMode			= ONCE
			End
			Animation				= Sword2
				AnimationName			= RUElfWar_FERS
				AnimationMode			= ONCE
			End
			Flags					= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("arrow")
				CurDrawableHideSubObject("arrownock")
				
				if PrevState == "STATE_Emotion_Bow"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_BowToSword_Ready")
					end
				end
			EndScript
		End
		AnimationState					= EMOTION_UNCONTROLLABLY_AFRAID 
			StateName				= STATE_Emotion_Bow
			Animation				= Bow
				AnimationName			= RUElfWar_FERB
				AnimationMode			= ONCE
				AnimationBlendTime		= 15
			End	
			Animation				= Bow2
				AnimationName			= RUElfWar_FERB
				AnimationMode			= ONCE
				AnimationBlendTime		= 15
			End
			Flags					= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("arrownock")
				
				if PrevState == "STATE_Emotion_Sword"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Ready")
					end
				end
			EndScript	
		End
		
	
		; -------- Alert ------- ;
		
		AnimationState					= EMOTION_ALERT WEAPONSET_TOGGLE_1
			StateName				= Ready_Sword
			
			Animation				= Alert_1
				AnimationName			= RUElfWar_IDLST1
				AnimationMode			= LOOP
			End
			
			BeginScript
				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("ArrowNock")
				CurDrawableHideSubObject("arrow")
				if Prev == "Bored_Sword"		then CurDrawableSetTransitionAnimState("TRANS_BR_Sword")			end
				if Prev == "Selected_Sword"		then CurDrawableSetTransitionAnimState("TRANS_SR_Sword")			end
				if Prev == "Selected_Bow" or Prev == "Moving_Bow" or Prev == "Ready_Bow" or Prev == "Bored_Bow" or PrevAnim == "WantSword"
				then 
					CurDrawableSetTransitionAnimState("TRANS_BowToSword_Ready")	
				end
			EndScript
		End
		AnimationState					= ENGAGED WEAPONSET_TOGGLE_1
			StateName				= Ready_Sword
			
			Animation				= Alert_1
				AnimationName			= RUElfWar_IDLST1
				AnimationMode			= LOOP
			End
			
			BeginScript
				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("ArrowNock")
				CurDrawableHideSubObject("arrow")
				if Prev == "Bored_Sword"		then CurDrawableSetTransitionAnimState("TRANS_BR_Sword")			end
				if Prev == "Selected_Sword"		then CurDrawableSetTransitionAnimState("TRANS_SR_Sword")			end
				if Prev == "Selected_Bow" or Prev == "Moving_Bow" or Prev == "Ready_Bow" or Prev == "Bored_Bow" or PrevAnim == "WantSword"
				then 
					CurDrawableSetTransitionAnimState("TRANS_BowToSword_Ready")	
				end
			EndScript
		End
		AnimationState					= ATTACKING WEAPONSET_TOGGLE_1
			StateName				= Ready_Sword
			
			Animation				= Alert_1
				AnimationName			= RUElfWar_IDLST1
				AnimationMode			= LOOP
			End
			
			BeginScript
				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("ArrowNock")
				CurDrawableHideSubObject("arrow")
				if Prev == "Bored_Sword"		then CurDrawableSetTransitionAnimState("TRANS_BR_Sword")			end
				if Prev == "Selected_Sword"		then CurDrawableSetTransitionAnimState("TRANS_SR_Sword")			end
				if Prev == "Selected_Bow" or Prev == "Moving_Bow" or Prev == "Ready_Bow" or Prev == "Bored_Bow" or PrevAnim == "WantSword"
				then 
					CurDrawableSetTransitionAnimState("TRANS_BowToSword_Ready")	
				end
			EndScript
		End
		
		; AnimationState					= EMOTION_ALERT
			; StateName				= Ready_Bow
			
			; Animation				= IDLB
				; AnimationName			= RUElfWar_IDLB
				; AnimationMode			= LOOP
			; End
			
			; BeginScript
				; CurDrawableShowSubObject("arrow")
				; CurDrawableShowSubObject("arrownock")
				; PrevAnim = CurDrawablePrevAnimation()
				; Prev = CurDrawablePrevAnimationState()
				; if Prev == "Bored_Bow"		then CurDrawableSetTransitionAnimState("TRANS_BR_Bow")				end
				; if Prev == "Selected_Bow"	then CurDrawableSetTransitionAnimState("TRANS_SR_Bow")				end
				; if Prev == "Selected_Sword" or Prev == "Moving_Sword" or Prev == "Ready_Sword" or Prev == "Bored_Sword" or PrevAnim == "WantBow"
				; then 
					; CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Ready")	
				; end				
			; EndScript
		; End 
		; AnimationState					= ENGAGED
			; StateName				= Ready_Bow
			
			; Animation				= IDLB
				; AnimationName			= RUElfWar_IDLB
				; AnimationMode			= LOOP
			; End
			
			; BeginScript
				; CurDrawableShowSubObject("arrow")
				; CurDrawableShowSubObject("arrownock")
				; PrevAnim = CurDrawablePrevAnimation()
				; Prev = CurDrawablePrevAnimationState()
				; if Prev == "Bored_Bow"		then CurDrawableSetTransitionAnimState("TRANS_BR_Bow")				end
				; if Prev == "Selected_Bow"	then CurDrawableSetTransitionAnimState("TRANS_SR_Bow")				end
				; if Prev == "Selected_Sword" or Prev == "Moving_Sword" or Prev == "Ready_Sword" or Prev == "Bored_Sword" or PrevAnim == "WantBow"
				; then 
					; CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Ready")	
				; end				
			; EndScript
		; End
		; AnimationState					= ATTACKING
			; StateName				= Ready_Bow
			
			; Animation				= IDLB
				; AnimationName			= RUElfWar_IDLB
				; AnimationMode			= LOOP
			; End
			
			; BeginScript
				; CurDrawableShowSubObject("arrow")
				; CurDrawableShowSubObject("arrownock")
				; PrevAnim = CurDrawablePrevAnimation()
				; Prev = CurDrawablePrevAnimationState()
				; if Prev == "Bored_Bow"		then CurDrawableSetTransitionAnimState("TRANS_BR_Bow")				end
				; if Prev == "Selected_Bow"	then CurDrawableSetTransitionAnimState("TRANS_SR_Bow")				end
				; if Prev == "Selected_Sword" or Prev == "Moving_Sword" or Prev == "Ready_Sword" or Prev == "Bored_Sword" or PrevAnim == "WantBow"
				; then 
					; CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Ready")	
				; end				
			; EndScript
		; End
		
		
		
;;------------ EMOTIONS ------------------------------------------------------------------
;;======= AFRAID

		AnimationState					= EMOTION_AFRAID WEAPONSET_TOGGLE_1
			StateName				= STATE_Emotion_Sword
			Animation				= Sword
				AnimationName			= RUElfWar_FERS
				AnimationMode			= ONCE
			End
			Animation				= Sword2
				AnimationName			= RUElfWar_FERS
				AnimationMode			= ONCE
			End
			Flags					= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("arrow")
				CurDrawableHideSubObject("arrownock")
				
				if PrevState == "STATE_Emotion_Bow"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_BowToSword_Ready")
					end
				end
			EndScript
		End
		AnimationState					= EMOTION_AFRAID 
			StateName				= STATE_Emotion_Bow
			Animation				= Bow
				AnimationName			= RUElfWar_FERB
				AnimationMode			= ONCE
				AnimationBlendTime		= 15
			End	
			Animation				= Bow2
				AnimationName			= RUElfWar_FERB
				AnimationMode			= ONCE
				AnimationBlendTime		= 15
			End
			Flags					= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("arrownock")
				
				if PrevState == "STATE_Emotion_Sword"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Ready")
					end
				end
			EndScript	
		End
		
;;====== CELEBRATING		

		AnimationState					= EMOTION_CELEBRATING WEAPONSET_TOGGLE_1
			StateName				= STATE_Emotion_Sword
			Animation				= Sword
				AnimationName			= RUElfWar_CHRST2
				AnimationMode			= ONCE
			End
			Animation				= Sword2
				AnimationName			= RUElfWar_CHRST2
				AnimationMode			= ONCE
			End
			Flags					= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("arrow")
				CurDrawableHideSubObject("arrownock")
				
				if PrevState == "STATE_Emotion_Bow"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_BowToSword_Ready")
					end
				elseif PrevState == "STATE_Emotion_Sword"
				then
					CurDrawableAllowToContinue()
				elseif PrevState == "Selected_Sword"
				then
					CurDrawableSetTransitionAnimState("TRANS_SR_Sword")
				elseif PrevState == "Bored_Sword"
				then
					CurDrawableSetTransitionAnimState("TRANS_BR_Sword")
				end
			EndScript
		End
		AnimationState					= EMOTION_CELEBRATING
			StateName				= STATE_Emotion_Bow
			Animation				= Bow
				AnimationName			= RUElfWar_CHRB
				AnimationMode			= ONCE
			End
			Animation				= Bow2
				AnimationName			= RUElfWar_CHRB
				AnimationMode			= ONCE
			End
			Flags					= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("arrownock")
				
				if PrevState == "STATE_Emotion_Sword"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Ready")
					end
				elseif PrevState == "STATE_Emotion_Bow"
				then
					CurDrawableAllowToContinue()
				elseif PrevState == "Selected_Bow"
				then
					CurDrawableSetTransitionAnimState("TRANS_SR_Bow")
				elseif PrevState == "Bored_Bow"
				then
					CurDrawableSetTransitionAnimState("TRANS_BR_Bow")
				end
			EndScript	
		End

;;====== TAUNTING

		AnimationState					= EMOTION_TAUNTING WEAPONSET_TOGGLE_1
			StateName				= STATE_Emotion_Sword
			Animation				= Sword
				AnimationName			= RUElfWar_TNTSV1
				AnimationMode			= ONCE
			End
			Animation				= Sword2
				AnimationName			= RUElfWar_TNTSV1
				AnimationMode			= ONCE
			End
			Flags					= RESTART_ANIM_WHEN_COMPLETE ;MAINTAIN_FRAME_ACROSS_STATES
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("arrow")
				CurDrawableHideSubObject("arrownock")
				
				if PrevState == "STATE_Emotion_Bow"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_BowToSword_Ready")
					end
				elseif PrevState == "STATE_Emotion_Sword"
					then
						CurDrawableAllowToContinue()
				elseif PrevState == "Selected_Sword"
				then
					CurDrawableSetTransitionAnimState("TRANS_SR_Sword")
				elseif PrevState == "Bored_Sword"
				then
					CurDrawableSetTransitionAnimState("TRANS_BR_Sword")
				end
			EndScript
		End
		AnimationState					= EMOTION_TAUNTING
			StateName				= STATE_Emotion_Bow
			Animation				= Bow1
				AnimationName			= RUElfWar_TNTB
				AnimationMode			= ONCE
			End
			Animation				= Bow2
				AnimationName			= RUElfWar_TNTB	 ; RUElfWar_TNTBX anim does not exist
				AnimationMode			= ONCE
			End
			Flags					= RESTART_ANIM_WHEN_COMPLETE ;MAINTAIN_FRAME_ACROSS_STATES
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("arrownock")
				
				if PrevState == "STATE_Emotion_Sword"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Ready")
					end
				elseif PrevState == "STATE_Emotion_Bow"
				then
					CurDrawableAllowToContinue()
				elseif PrevState == "Selected_Bow"
				then
					CurDrawableSetTransitionAnimState("TRANS_SR_Bow")
				elseif PrevState == "Bored_Bow"
				then
					CurDrawableSetTransitionAnimState("TRANS_BR_Bow")
				end
			EndScript
		End

;;====== POINTING

		AnimationState					= EMOTION_POINTING WEAPONSET_TOGGLE_1
			StateName				= STATE_Emotion_Sword
			Animation				= Sword
				AnimationName			= RUElfWar_PNTB
				AnimationMode			= ONCE
			End
			Animation				= Sword2
				AnimationName			= RUElfWar_PNTB
				AnimationMode			= ONCE
			End
			Flags					= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableHideSubObject("arrow")
				CurDrawableHideSubObject("arrownock")
				
				if PrevState == "STATE_Emotion_Bow"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_BowToSword_Ready")
					end
				elseif PrevState == "STATE_Emotion_Sword"
				then
					CurDrawableAllowToContinue()
				elseif PrevState == "Selected_Sword"
				then
					CurDrawableSetTransitionAnimState("TRANS_SR_Sword")
				elseif PrevState == "Bored_Sword"
				then
					CurDrawableSetTransitionAnimState("TRANS_BR_Sword")
				end
			EndScript
		End
		AnimationState					= EMOTION_POINTING
			StateName				= STATE_Emotion_Bow
			Animation				= Bow
				AnimationName			= RUElfWar_PNTA
				AnimationMode			= ONCE
			End
			Animation				= Bow2
				AnimationName			= RUElfWar_PNTA
				AnimationMode			= ONCE
			End
			Flags					= MAINTAIN_FRAME_ACROSS_STATES RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				PrevState = CurDrawablePrevAnimationState()
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("arrownock")
				
				if PrevState == "STATE_Emotion_Sword"
				then
					CurDrawableAllowToContinue()
					if( CurDrawablePrevAnimFraction() > .89 )
					then
						CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Ready")
					end
				elseif PrevState == "STATE_Emotion_Bow"
				then
					CurDrawableAllowToContinue()
				elseif PrevState == "Selected_Bow"
				then
					CurDrawableSetTransitionAnimState("TRANS_SR_Bow")
				elseif PrevState == "Bored_Bow"
				then
					CurDrawableSetTransitionAnimState("TRANS_BR_Bow")
				end
			EndScript
		End
		
		; ------ Selected ------ ;

		AnimationState				=	SELECTED WEAPONSET_TOGGLE_1
			StateName			=	Selected_Sword
			
			Animation			=	ATNA
				AnimationName		=	RUElfWar_ATNS
				AnimationMode		=	LOOP
			End
			
			BeginScript
				CurDrawableHideSubObject("ARROW")
				CurDrawableHideSubObject("ARROWNOCK")
				
				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				if Prev == "STATE_Emotion_Bow" or Prev == "STATE_Emotion_Sword" then CurDrawableAllowToContinue() end
				if Prev == "Bored_Sword"		then CurDrawableSetTransitionAnimState("TRANS_BS_Sword")		end
				if Prev == "Ready_Sword"		then CurDrawableSetTransitionAnimState("TRANS_RS_Sword")		end
				if Prev == "Selected_Bow" or Prev == "Moving_Bow" or Prev == "Ready_Bow" or Prev == "Bored_Bow" or PrevAnim == "WantSword"
				then
					CurDrawableSetTransitionAnimState("TRANS_BowToSword_Selected")	
				end
				
			EndScript
		End

		AnimationState				=	SELECTED 
			StateName           		=	Selected_Bow
			
			Animation			=	ATNE
				AnimationName		=	RUElfWar_ATNE
				AnimationMode		=	LOOP
			End
			
			BeginScript
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("arrownock")
				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				if Prev == "STATE_Emotion_Bow" or Prev == "STATE_Emotion_Sword" then CurDrawableAllowToContinue() end
				if Prev == "Bored_Bow" then CurDrawableSetTransitionAnimState("TRANS_BS_Bow")				end
				if Prev == "Ready_Bow" then CurDrawableSetTransitionAnimState("TRANS_RS_Bow")				end
				if Prev == "Selected_Sword" or Prev == "Moving_Sword" or Prev == "Ready_Sword" or Prev == "Bored_Sword" or PrevAnim == "WantBow"
				then 
					CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Selected")	
				end	
			EndScript
		End
		
		
		; --------- Hit Reactions ---------- ;
		
		AnimationState						= HIT_REACTION HIT_LEVEL_1 WEAPONSET_TOGGLE_1
			StateName					= Bored_Sword
			Animation					= Hit_Level_1_a
				AnimationName				= RUElfWar_HITE
				AnimationMode				= ONCE
			End
		End

		AnimationState 						= HIT_REACTION HIT_LEVEL_1
			StateName					= Bored_Bow
			Animation 					= Hit_Level_1_a
				AnimationName				= RUElfWar_HITB
				AnimationMode 				= ONCE
				AnimationSpeedFactorRange		= .9 .9
			End
		End
		
		
		; ------- Bored -------- ;
		
		AnimationState				= WEAPONSET_TOGGLE_1
			StateName			= Bored_Sword
			
			Animation           		= Idle_Sword1
				AnimationName       	= RUElfWar_IDLG
				AnimationMode       	= ONCE
			End
			Animation           		= Idle_Sword2
				AnimationName       	= RUElfWar_IDLCT1
				AnimationMode       	= ONCE
			End
			Animation           		= Idle_Sword3
				AnimationName       	= RUElfWar_IDLCT3
				AnimationMode       	= ONCE
			End
			Animation			= IdleNoFidget
				AnimationName		= RUElfWar_IDLF
				AnimationMode		= ONCE
				AnimationPriority	= 20
			End
			Animation			= IdleNoFidget2
				AnimationName		= RUElfWar_IDLF
				AnimationMode		= ONCE
				AnimationPriority	= 0
			End
			Flags				= RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				CurDrawableHideSubObject("ARROW")
				CurDrawableHideSubObject("ARROWNOCK")				

				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				if Prev == "TRANS_SB_Sword" or Prev == "TRANS_RB_Sword" then return "IdleNoFidget" end
				if Prev == "Selected_Sword"		then CurDrawableSetTransitionAnimState("TRANS_SB_Sword")		end
				if Prev == "Ready_Sword"		then CurDrawableSetTransitionAnimState("TRANS_RB_Sword")		end
				if Prev == "Selected_Bow" or Prev == "Moving_Bow" or Prev == "Ready_Bow" or Prev == "Bored_Bow" or PrevAnim == "WantSword"
				then 
					CurDrawableSetTransitionAnimState("TRANS_BowToSword_Selected")	
				end
			EndScript
		End
		
		IdleAnimationState
			StateName				= Bored_Bow
			
			Animation				= IdleBowB
				AnimationName			= RUElfWar_IDLDX1
				AnimationMode			= ONCE
			End
			Animation				= IdleBowD
				AnimationName			= RUElfWar_IDLD
				AnimationMode			= ONCE
			End
			Animation				= IdleNoFidget
				AnimationName			= RUElfWar_IDLE
				AnimationMode			= ONCE
				AnimationPriority		= 20
			End
			Animation				= IdleNoFidget2
				AnimationName			= RUElfWar_IDLE
				AnimationMode			= ONCE
				AnimationPriority		= 10
			End
			Flags					= RESTART_ANIM_WHEN_COMPLETE
			BeginScript	
				CurDrawableShowSubObject("arrow")
				CurDrawableShowSubObject("arrownock")			
				PrevAnim = CurDrawablePrevAnimation()
				Prev = CurDrawablePrevAnimationState()
				if Prev == "TRANS_SB_Bow" or Prev == "TRANS_RB_Bow" then return "IdleNoFidget" end
				if Prev == "Selected_Bow"		then CurDrawableSetTransitionAnimState("TRANS_SB_Bow")		end
				if Prev == "Ready_Bow"			then CurDrawableSetTransitionAnimState("TRANS_RB_Bow")		end
				if Prev == "Selected_Sword" or Prev == "Moving_Sword" or Prev == "Ready_Sword" or Prev == "Bored_Sword" or PrevAnim == "WantBow"
				then 
					CurDrawableSetTransitionAnimState("TRANS_SwordToBow_Selected")	
				end	
			EndScript
		End

		
		;----------------- Bow Transitions -------------------------;

		TransitionState       			= TRANS_BS_Bow
			Animation           		= ATND
				AnimationName     	= RUElfWar_ATND
				AnimationMode     	= ONCE
				AnimationBlendTime	= 10
			End
		End
		
		TransitionState       			= TRANS_SR_Bow
			Animation           		= ATNE
				AnimationName     	= RUElfWar_ATNF
				AnimationMode     	= ONCE
			End
		End
		
		TransitionState       			= TRANS_SB_Bow
			Animation           		= ATND
				AnimationName     	= RUElfWar_ATND
				AnimationMode     	= ONCE_BACKWARDS
			End
			Flags				= START_FRAME_LAST
		End
		
		TransitionState       			= TRANS_RS_Bow
			Animation           		= ATNF
				AnimationName     	= RUElfWar_ATNF
				AnimationMode     	= ONCE_BACKWARDS
			End
			Flags				= START_FRAME_LAST
		End
		
		TransitionState       			= TRANS_BR_Bow
			Animation           		= IDLB
				AnimationName     	= RUElfWar_IDLB
				AnimationMode     	= ONCE
				AnimationBlendTime	= 20
			End
		End
		
		TransitionState       			= TRANS_RB_Bow
			Animation           		= IDLD
				AnimationName     	= RUElfWar_IDLD
				AnimationMode     	= ONCE
				AnimationBlendTime	= 20
			End
		End
		
		;----------------- Sword Transitions -------------------------;
		
		TransitionState       			= TRANS_BS_Sword
			Animation           		= ATNA
				AnimationName     	= RUElfWar_ATNA
				AnimationMode     	= ONCE
			End
			Animation           		= ATNAX1
				AnimationName     	= RUElfWar_ATNX1
				AnimationMode     	= ONCE
			End
		End
		
		TransitionState       			= TRANS_SR_Sword
			Animation           		= ATNC
				AnimationName     	= RUElfWar_ATNC
				AnimationMode     	= ONCE
			End
		End
		
		TransitionState       			= TRANS_SB_Sword
			Animation           		= ATNA
				AnimationName     	= RUElfWar_ATNA
				AnimationMode     	= ONCE_BACKWARDS
			End
			Flags				= START_FRAME_LAST
		End
		
		TransitionState       			= TRANS_RS_Sword
			Animation           		= ATNC
				AnimationName     	= RUElfWar_ATNC
				AnimationMode     	= ONCE_BACKWARDS
			End
			Flags				= START_FRAME_LAST
		End
		
		TransitionState       			= TRANS_BR_Sword
			Animation           		= ATNS
				AnimationName     	= RUElfWar_ATNS
				AnimationMode     	= ONCE
				AnimationBlendTime	= 20
			End
		End
		
		TransitionState       			= TRANS_RB_Sword
			Animation           		= IDLG
				AnimationName     	= RUElfWar_IDLG
				AnimationMode     	= ONCE
				AnimationBlendTime	= 20
			End
		End
		

		;-------------- Weapon Change Transitions --------------------------;		

		TransitionState       			= TRANS_BowToSword_Ready
			Animation           		= DrawSwords
				AnimationName       	= RUElfWar_STHA
				AnimationMode       	= ONCE
			End
		End

		TransitionState       			= TRANS_SwordToBow_Ready
			Animation           		= DrawBow
				AnimationName       	= RUElfWar_STHB
				AnimationMode       	= ONCE
			End
		End
		
		TransitionState       			= TRANS_BowToSword_Selected
			Animation           		= DrawSwords
				AnimationName       	= RUElfWar_STHC
				AnimationMode       	= ONCE
			End
		End

		TransitionState       			= TRANS_SwordToBow_Selected
			Animation           		= DrawBow
				AnimationName       	= RUElfWar_STHD
				AnimationMode       	= ONCE
			End
		End
	End
	
	; ***DESIGN parameters ***

	Side 		= Elves
	EditorSorting 	= UNIT
	ThreatLevel 	= 1.0
	ThingClass 	= HORDE_UNIT
	CommandPoints 	= 8


	TransportSlotCount = TRANSPORTSLOTCOUNT_UNIT				; 1
	WeaponSet
		Conditions = None 
		Weapon = PRIMARY    MirkwoodArcherBow
		Weapon = TERTIARY   MirkwoodArcherBowBombard
		AutoChooseSources = PRIMARY FROM_PLAYER FROM_SCRIPT FROM_AI
		AutoChooseSources = TERTIARY FROM_PLAYER FROM_SCRIPT				; Not AI.
	End
	WeaponSet
		Conditions = PLAYER_UPGRADE
		Weapon = PRIMARY	MirkwoodArcherSilverthornBow
		Weapon = TERTIARY   MirkwoodArcherSilverthornBowBombard
		AutoChooseSources = PRIMARY FROM_PLAYER FROM_SCRIPT FROM_AI
		AutoChooseSources = TERTIARY FROM_PLAYER FROM_SCRIPT				; Not AI.
	End
	WeaponSet
		Conditions 	= WEAPONSET_TOGGLE_1; CONTESTING_BUILDING
		Weapon 		= PRIMARY ElvenGaladhrimWarriorSword 
		Weapon 		= TERTIARY  MirkwoodArcherSilverthornBowBombard
		AutoChooseSources = PRIMARY FROM_PLAYER FROM_SCRIPT FROM_AI
	End
	WeaponSet
		Conditions = PLAYER_UPGRADE WEAPONSET_TOGGLE_1 CONTESTING_BUILDING ;WEAPONSET_TOGGLE_1 PLAYER_UPGRADE
		Weapon 		= PRIMARY ElvenGaladhrimWarriorSword 
		Weapon 		= TERTIARY  MirkwoodArcherSilverthornBowBombard
		AutoChooseSources = PRIMARY FROM_PLAYER FROM_SCRIPT FROM_AI
	End
		
	ArmorSet
		Conditions      = None
		Armor           = ElfWarriorHeavyArmor
		DamageFX        = NormalDamageFX
	End


	ArmorSet
		Conditions      	= PLAYER_UPGRADE
		Armor          		= ElfWarriorHeavyArmor
		DamageFX        	= NormalDamageFX
	End
        ShroudClearingRange = SHROUD_CLEAR_STANDARD
	BountyValue = ELVEN_MIRKWOOD_ARCHER_BOUNTY_VALUE
	VisionRange = ELVEN_MIRKWOOD_ARCHER_VISION_RANGE 		
	DisplayName = OBJECT:MirkwoodWarrior
	CrushableLevel = 0  				; What am I?:        0 = for infantry, 1 = for trees, 2 = general vehicles

	CrushRevengeWeapon = InfantryCrushRevenge
	
	CommandSet = GalWarriorHordeCommandSet
	
	

	; *** AUDIO Parameters ***;
 
	VoiceAttack									= WRElitesVoiceAttack
	VoiceAttackAir								= WRElitesVoiceAttackRanged
	VoiceAttackCharge							= WRElitesVoiceAttackCharge
	VoiceAttackMachine							= WRElitesVoiceAttack
	VoiceAttackStructure						= WRElitesVoiceAttackBuilding
	VoiceCreated								= WRElitesVoiceSalute
	VoiceFullyCreated 							= WRElitesVoiceSalute
	VoiceGuard									= WRElitesVoiceMove
	VoiceMove									= WRElitesVoiceMove
	VoiceMoveToCamp								= WRElitesVoiceMoveCamp
	VoiceMoveWhileAttacking						= WRElitesVoiceDisengage
	VoicePriority								= 38
	VoiceRetreatToCastle						= WRElitesVoiceMoveCamp
	VoiceSelect									= WRElitesVoiceSelectMS
	VoiceSelectBattle 							= WRElitesVoiceSelectBattle

	VoiceEnterStateAttack						= WRElitesVoiceEnterStateAttack
	VoiceEnterStateAttackAir					= WRElitesVoiceEnterStateAttack
	VoiceEnterStateAttackCharge					= WRElitesVoiceEnterStateAttackCharge
	VoiceEnterStateAttackMachine				= WRElitesVoiceEnterStateAttack
	VoiceEnterStateAttackStructure				= WRElitesVoiceEnterStateAttackBuilding
	VoiceEnterStateMove							= WRElitesVoiceEnterStateMove
	VoiceEnterStateMoveToCamp					= WRElitesVoiceEnterStateMoveCamp
	VoiceEnterStateMoveWhileAttacking			= WRElitesVoiceEnterStateDisengage
	VoiceEnterStateRetreatToCastle				= WRElitesVoiceEnterStateMoveCamp

	SoundImpact 								= ImpactHorse

	UnitSpecificSounds
		VoiceEnterStateInitiateCaptureBuilding	= WRElitesVoiceMove
		VoiceEnterUnitElvenTransportShip		= WRElitesVoiceGarrison
		VoiceGarrison							= WRElitesVoiceGarrison   
		VoiceInitiateCaptureBuilding			= WRElitesVoiceMove	; From SpecialPower SpecialAbilityCaptureBuilding
	End

	ClientBehavior = AnimationSoundClientBehavior ModuleTag_AnimAudioBehavior ;;,;; Entire behavior added for 2.1 from DC Patch ;;;
		MaxUpdateRangeCap = 800
		AnimationSound = Sound:ArrowDrawBow					Animation:RUElfWar_SKL.ruelfwar_atkaa1	Frames:6
		AnimationSound = Sound:ArrowDrawBow					Animation:RUElfWar_SKL.ruelfwar_atkaa2	Frames:18

		AnimationSound = Sound:SwordShingClean1ForHordes 		Animation:RUElfWar_SKL.RUElfWar_STHA 	Frames:24
		AnimationSound = Sound:SwordIntoScabbard1ForHordes		Animation:RUElfWar_SKL.RUElfWar_STHB 	Frames:9
		AnimationSound = Sound:WeaponSwitchBowForHordes		 	Animation:RUElfWar_SKL.RUElfWar_STHB 	Frames:15

		AnimationSound = Sound:SwordShingClean1ForHordes 		Animation:RUElfWar_SKL.RUElfWar_STHC 	Frames:20
		AnimationSound = Sound:SwordIntoScabbard1ForHordes		Animation:RUElfWar_SKL.RUElfWar_STHD 	Frames:5
		AnimationSound = Sound:WeaponSwitchBowForHordes 		Animation:RUElfWar_SKL.RUElfWar_STHD 	Frames:8

		AnimationSound = Sound:SwordShingClean1ForHordes 		Animation:RUElfWar_SKL.RUElfWar_RUNC 	Frames:14
		AnimationSound = Sound:SwordIntoScabbard1ForHordes 		Animation:RUElfWar_SKL.RUElfWar_RUNT 	Frames:4
		AnimationSound = Sound:WeaponSwitchBowForHordes 		Animation:RUElfWar_SKL.RUElfWar_RUNT 	Frames:16

		AnimationSound = Sound:BodyFallSoldier				Animation:RUElfWar_SKL.RUElfWar_LNDA	Frames:9
		AnimationSound = Sound:BodyFallSoldier				Animation:RUElfWar_SKL.RUElfWar_LNDB	Frames:1

		AnimationSound = Sound:BodyFallGenericNoArmor			Animation:RUElfWar_SKL.RUElfWar_DIEB 	Frames:82
		AnimationSound = Sound:BodyFallSoldier				Animation:RUElfWar_SKL.RUElfWar_DIEBV5 	Frames:25
		AnimationSound = Sound:BodyFallSoldier				Animation:RUElfWar_SKL.RUElfWar_DIESV4 	Frames:26
		AnimationSound = Sound:BodyFallGenericNoArmor			Animation:RUElfWar_SKL.RUElfWar_DIESV5	Frames:100
	End


    #include "..\..\..\includes\StandardUnitEvaEvents.inc"


	; *** ENGINEERING Parameters ***
	RadarPriority = UNIT
	KindOf = PRELOAD SELECTABLE CAN_CAST_REFLECTIONS INFANTRY SCORE THROWN_OBJECT PATH_THROUGH_EACH_OTHER ARCHER ATTACK_NEEDS_LINE_OF_SIGHT GRAB_AND_DROP
	
	Body = ActiveBody ModuleTag_02
		CheerRadius 	  = EMOTION_CHEER_RADIUS
		MaxHealth         = 300 ;ELVEN_MIRKWOOD_ARCHER_HEALTH			;BALANCE RohanElvenWarrior
		MaxHealthDamaged  = ELVEN_MIRKWOOD_ARCHER_HEALTH_DAMAGED		
		RecoveryTime      = ELVEN_NOLDORWARRIOR_HEALTH_RECOVERY_TIME		
	End
	
	Behavior = SubObjectsUpgrade ModuleTag_FireArrowSwapUpgrade
		TriggeredBy		= Upgrade_ElvenSilverthornArrows
  		HideSubObjects	= QUIVER ARROWNOCK
  		ShowSubObjects	= QUIVERU ARROWNOCKUP
	End
		
	Behavior = SubObjectsUpgrade ForgedBlades_Upgrade
		TriggeredBy	= Upgrade_ElvenForgedBlades
		ShowSubObjects	= Forged_Blade
	End

	Behavior = AIUpdateInterface ModuleTag_03
		AutoAcquireEnemiesWhenIdle	= Yes 
		CanAttackWhileContained		= Yes
		AILuaEventsList			= MirkwoodRegularWarriorFunctions
		AttackPriority			= AttackPriority_ARCHER
		BurningDeathTime		= BURNINGDEATH_DURATION_INFANTRY
	End


	LocomotorSet
		Locomotor = HumanLocomotor
		Condition = SET_NORMAL 
		Speed     = NORMAL_FOOT_FAST_MEMBER_SPEED	
	End

	LocomotorSet
		Locomotor = HumanWanderLocomotor
		Condition = SET_WANDER
		Speed     = NORMAL_FOOT_FAST_MEMBER_SPEED	
	End

	LocomotorSet
		Locomotor = HumanPanicLocomotor
		Condition = SET_PANIC
		Speed	  = NORMAL_FOOT_FAST_MEMBER_SPEED		
	End
	
	LocomotorSet
		Locomotor = HumanScaredLocomotor
		Condition = SET_SCARED
		Speed	  = NORMAL_FOOT_FAST_MEMBER_SPEED		
	End
			
	; Fire arrow upgrade
	Behavior = WeaponSetUpgrade ModuleTag_14
		TriggeredBy = Upgrade_ElvenSilverthornArrows
	End
	
	Behavior = DualWeaponBehavior ModuleTag_13
		SwitchWeaponOnCloseRangeDistance = 21
	End

	Behavior = PhysicsBehavior ModuleTag_04
		GravityMult = 1.0
	End
	
	Behavior = SlowDeathBehavior ModuleTag_05
		DeathTypes = ALL -KNOCKBACK
		SinkDelay = 3000
		SinkRate = 0.5     ; in Dist/Sec
		DestructionDelay = 15000
            Sound = INITIAL SindarElfGenericVoiceDie

	End
	
	Behavior = SquishCollide ModuleTag_06
		;nothing
	End

	Behavior = BezierProjectileBehavior ModuleTag_08 ; Module starts asleep, and wakes up when thrown.
		; 
		FirstHeight = 25  ; Height of Bezier control points above highest intervening terrain
		SecondHeight = 25
		FirstPercentIndent = 30% ; Percentage of shot distance control points are placed
		SecondPercentIndent = 70%
		TumbleRandomly = Yes

		CrushStyle = Yes ; I don't detonate, I just hit
		DieOnImpact = Yes
		BounceCount = 1   ; When I hit the ground, I'll arc again
		BounceDistance = 41 ; this far
		BounceFirstHeight = 25  ; Height of Bezier control points above highest intervening terrain
		BounceSecondHeight = 25
		BounceFirstPercentIndent = 20% ; Percentage of shot distance control points are placed
		BounceSecondPercentIndent = 80%

		GroundHitFX       = FX_ThrownRockGroundHit
		GroundBounceFX    = FX_ThrownRockBounceHit
	End

	; Tie into LargeGroupAudio system
		Behavior = LargeGroupAudioUpdate ModuleTag_LGAU
			Key = Elf Unit Infantry Elf_Warrior
		End

	Geometry = CYLINDER
	GeometryMajorRadius = 8.0
	GeometryMinorRadius = 8.0
	GeometryHeight = 19.2
	GeometryIsSmall = Yes
	Shadow = SHADOW_DECAL
	ShadowSizeX = 14;
	ShadowSizeY = 14;
	ShadowTexture = ShadowI;
End


Object MirkwoodWarriorBannerInn MirkwoodWarriorInn

	Draw = W3DScriptedModelDraw ModuleTag_01
	
	
		ExtraPublicBone = Glow
		ExtraPublicBone = Adornment
		ExtraPublicBone = Streamers
	
	
	  OkToChangeModelColor = Yes
   StaticModelLODMode = yes ; Will append M or L to the skin name depending on GameLOD

		DefaultModelConditionState
			Model               = tubanner_skn
			Skeleton			= GUBanner_SKL
		End
		
		ModelConditionState COMING_OUT_OF_FACTORY
			Model = tubanner_skn
			Skeleton = GUBanner_SKL
		End
				
		AnimationState						= PASSENGER
			Animation						= Wiggle
				AnimationName				= GUBanner_FLLA
				AnimationMode				= LOOP
			End
		End
		
		AnimationState						= FREEFALL
			Animation						= Falling
				AnimationName				= GUBanner_FLYA
				AnimationMode				= LOOP
				AnimationBlendTime			= 10
				AnimationSpeedFactorRange	= 0.5	0.5
			End
		End
		
		IdleAnimationState
			;Animation           = IDLA
			;	AnimationName     = GUBanner_IDLA
			;	AnimationMode     = ONCE
			;	AnimationBlendTime  = 15
			;	AnimationPriority = 20
			;End
			Animation				=	IdleB
				AnimationName		=	GUBanner_IDLB
				AnimationMode		=	ONCE
				AnimationBlendTime	=	15
				AnimationPriority = 1
			End
			StateName           = Idle		
		End

		AnimationState        = MOVING FIRING_OR_PREATTACK_A
			ShareAnimation		= Yes
			Animation           = RunAndFire
				AnimationName       = GUBanner_ATRA
				AnimationMode       = LOOP
				;Distance			= 70; 35
			End
			Flags               = RANDOMSTART
		End
	
		


;;======TERROR		
		AnimationState					= MOVING EMOTION_TERROR BACKING_UP
			Animation					= Terror
				AnimationName			= GUBanner_BAKA
				AnimationMode			= LOOP
				AnimationSpeedFactorRange 1.5 1.5
			End
		End
		AnimationState					= MOVING EMOTION_TERROR EMOTION_LOOK_TO_SKY
			Animation					= TerrorFromTheSky
				AnimationName			= GUBanner_RUNB
				AnimationMode			= LOOP
			End
		End
		AnimationState					= MOVING EMOTION_TERROR
			Animation					= Terror
				AnimationName			= GUBanner_RUNB
				AnimationMode			= LOOP
			End
		End
;;-----------------------------
		
		AnimationState        = STUNNED_FLAILING
			Animation           = StunFlail
				AnimationName     = GUBanner_FLYA
				AnimationMode      = LOOP
			End
			Flags               = RANDOMSTART
		End

		AnimationState					= DYING BURNINGDEATH
			Animation
				AnimationName			= GUBanner_DIEA
				AnimationMode			= ONCE
				AnimationBlendTime		= 10
			End
		End

		AnimationState        = DYING SPLATTED
			Animation           = LNDA
				AnimationName     = GUBanner_LNDA
				AnimationMode     = ONCE
			End
		End

		AnimationState        = DYING
			Animation           = DIEA
				AnimationName     = GUBanner_DIEA
				AnimationMode     = ONCE
			End
		End
                
	AnimationState						= PARALYZED
		Animation
			AnimationName				= GUBanner_IDLA
			AnimationMode				= LOOP
		End
	End

	AnimationState						= BURNINGDEATH
		Animation
			AnimationName				= GUBanner_MFDA
			AnimationMode				= Loop
			Distance					= 55
		End
	End

                AnimationState        = STUNNED_STANDING_UP
			Animation           = GTPA
				AnimationName     = GUBanner_GTPA
				AnimationMode     = ONCE
			End
		End
				
		AnimationState        = STUNNED
			Animation           = LNDA
				AnimationName     = GUBanner_LNDA
				AnimationMode     = ONCE
			End
		End
	
		AnimationState        = FIRING_OR_PREATTACK_A
			Animation           = ATKA
				AnimationName     = GUBanner_ATKA
				AnimationMode     = ONCE
				UseWeaponTiming	  = Yes
			End
			StateName           = Attack
		End
		
		AnimationState  = COMING_OUT_OF_FACTORY
			Animation = Being_Built
				AnimationName		= GUBanner_RUNC
				AnimationMode		= LOOP
				AnimationBlendTime	= 0
			End
		End	
				
		AnimationState					= MOVING BACKING_UP
			Animation					= BackingUp
				AnimationName			= GUBanner_BAKA
				AnimationMode			= LOOP
				AnimationBlendTime		= 15
			End
			Flags						= RANDOMSTART
		End
		
		AnimationState				= MOVING ALTERNATE_FORMATION PASSENGER_VARIATION_3
			Animation				= WalkingInASlowShieldGuardFormation
				AnimationName		= GUBanner_WLKA
				AnimationMode		= LOOP
               AnimationSpeedFactorRange = .9 .9
			End
			Flags					= RANDOMSTART
			;ParticleSysBone			= None InfantryDustTrails
		End
	
		AnimationState				= MOVING ALTERNATE_FORMATION PASSENGER_VARIATION_1
			Animation				= RunningSlowerInAFighterAlternateFormation
				AnimationName		= GUBanner_RUNA
				AnimationMode		= LOOP
                AnimationSpeedFactorRange = .5 .5
			End
			Flags					= RANDOMSTART
			;ParticleSysBone			= None InfantryDustTrails
		End
		
		AnimationState				= MOVING
			Animation				= RUNA
				AnimationName		= GUBanner_RUNA
				AnimationMode		= LOOP
                AnimationSpeedFactorRange = .8 .8 ;
			End
			Flags					= RANDOMSTART
			;ParticleSysBone			= None InfantryDustTrails
		End
		
;;----------------- HIT REACTION -----------------------------------
		
		AnimationState = HIT_REACTION
			Animation = Hit_Level_1_a
				AnimationName = GUBanner_HITA
				AnimationMode = ONCE
			End
		End
		
;;-------------------------------- EMOTIONS ------------------------------------------
;;======== APPREHENSIVE
		
		AnimationState					=	EMOTION_ALERT EMOTION_AFRAID
			Animation					=	Apprehensive
				AnimationName			=	GUBanner_APPA
				AnimationMode			=	LOOP	;Change this to ONCE if adding additional anims
			End
		End
		
;;======== AFRAID

		AnimationState					= EMOTION_AFRAID
			Animation					= FERA
				AnimationName			= GUBanner_FERA
				AnimationMode			= LOOP
			End
		End
		
;;======= TAUNTING

		AnimationState					= EMOTION_TAUNTING
			Animation					= Taunting
				AnimationName			= GUBanner_TNTA
				AnimationMode			= LOOP
			End
		End
		
;;====== POINTING

		AnimationState					= EMOTION_POINTING
			Animation					= &&POINT&&
				AnimationName			= GUBanner_IDLA
				AnimationMode			= LOOP
			End
		End
		
;;======== CELEBRATING

		
		AnimationState					= EMOTION_CELEBRATING
			Animation					= CHRA
				AnimationName			= GUBanner_CHRA
				AnimationMode			= LOOP
			End
		End

	;;----------------- ALERT STATE ------------------------------------
	
		AnimationState					= EMOTION_ALERT
			Animation					= IDLA
				AnimationName			= GUBanner_IDLA
				AnimationMode			= LOOP
			End
			;Flags						= RESTART_ANIM_WHEN_COMPLETE
			;BeginScript
			;	Prev = CurDrawablePrevAnimationState()
			;	if Prev == "STATE_Selected" then CurDrawableSetTransitionAnimState("TRANS_Selected_To_Ready") end
			;EndScript
		End
		
		AnimationState					= RAISING_FLAG
			Animation					= CHRA
				AnimationName			= GUBanner_CHRA
				AnimationMode			= LOOP
			End
		End

;--------- selected and transitions ------------------------------------
		AnimationState					= SELECTED
			StateName					= STATE_Selected
			Animation					= ATNB
				AnimationName			= GUBanner_ATNB
				AnimationMode			= LOOP
				AnimationBlendTime		= 15
			End
			;Flags						= RESTART_ANIM_WHEN_COMPLETE
			BeginScript
				Prev = CurDrawablePrevAnimationState()
				if Prev == "Idle" then CurDrawableSetTransitionAnimState("TRANS_Idle_To_Selected") end
			EndScript
		End
;;=======IDLE STATE
		TransitionState					=	TRANS_Idle_to_Selected
			Animation					=	ATNA
				AnimationName			=	GUBanner_ATNA
				AnimationMode			=	ONCE
			End
		End
		
		
		TransitionState					=	TRANS_Idle_to_Selected3
			Animation					=	ATNA
				AnimationName			=	RURrmBnr_ATNA
				AnimationMode			=	ONCE
			End
		End
		
		
		TransitionState					=	TRANS_Selected3_to_Idle
			Animation					=	ATNC
				AnimationName			=	RURrmBnr_ATNC
				AnimationMode			=	ONCE
			End
		End
		
		;TransitionState					=	TRANS_Selected_To_Ready
		;	Animation					=	ATNB
		;		AnimationName			=	GUBanner_ATNB
		;		AnimationMode			=	ONCE
		;	End
		;End

	End

   #include "..\..\..\includes\StunDrawModuleSmall.inc"

	; ***DESIGN parameters ***
	Side = Mirkwood
	EditorSorting = UNIT
	ThreatLevel = 1.0
	ThingClass = HORDE_UNIT
	CommandPoints = 0

	TransportSlotCount = TRANSPORTSLOTCOUNT_UNIT
	WeaponSet
		Conditions = None 
		Weapon = PRIMARY    GondorSword
		AutoChooseSources = PRIMARY FROM_PLAYER FROM_SCRIPT FROM_AI
	End
	ArmorSet
		Conditions      = None
		Armor           = GreenwoodArcherArmor ;;,;; NoArmor
		DamageFX        = NormalDamageFX
	End

	VisionRange = VISION_STANDARD_MELEE
	VisionSide = 35%
	VisionRear = 25%
	ShroudClearingRange = SHROUD_CLEAR_STANDARD

	DisplayName = OBJECT:ElvenMirkwoodArcherBanner
	
	CrusherLevel = 0			;Can I crush anything?
	CrushableLevel = 0			;What am I?:        0 = for infantry, 1 = for trees, 2 = cavalry/heroes
	MountedCrusherLevel = 1		;Crush level when mounted.
	MountedCrushableLevel = 3	;Crusable level when mounted.
	CrushRevengeWeapon = BasicInfantryCrushRevenge
      CrushWeapon       = KnightCrush

	BuildCost 		= GONDOR_BANNER_BUILDCOST
	BuildTime 		= GONDOR_BANNER_BUILDTIME
	BountyValue     = 14 ;10 ;ELVEN_BANNER_BOUNTY_VALUE
;	CommandSet      = GondorBannerCommandSet
	CommandSet = EmptyCommandSet


	; *** AUDIO Parameters ***;

	VoiceAttack									= WRElitesVoiceAttack
	VoiceAttackCharge							= WRElitesVoiceAttackCharge
	VoiceAttackMachine							= WRElitesVoiceAttack
	VoiceAttackStructure						= WRElitesVoiceAttackBuilding
	VoiceCreated								= WRElitesVoiceSalute
	VoiceFullyCreated 							= WRElitesVoiceSalute
	VoiceGuard									= WRElitesVoiceMove
	VoiceMove									= WRElitesVoiceMove
	VoiceMoveToCamp								= WRElitesVoiceMoveCamp
	VoiceMoveWhileAttacking						= WRElitesVoiceDisengage
	VoicePriority								= 38
	VoiceRetreatToCastle						= WRElitesVoiceMoveCamp
	VoiceSelect									= WRElitesVoiceSelectMS
	VoiceSelectBattle 							= WRElitesVoiceSelectBattle

	VoiceEnterStateAttack						= WRElitesVoiceEnterStateAttack
	VoiceEnterStateAttackAir					= WRElitesVoiceEnterStateAttack
	VoiceEnterStateAttackCharge					= WRElitesVoiceEnterStateAttackCharge
	VoiceEnterStateAttackMachine				= WRElitesVoiceEnterStateAttack
	VoiceEnterStateAttackStructure				= WRElitesVoiceEnterStateAttackBuilding
	VoiceEnterStateMove							= WRElitesVoiceEnterStateMove
	VoiceEnterStateMoveToCamp					= WRElitesVoiceEnterStateMoveCamp
	VoiceEnterStateMoveWhileAttacking			= WRElitesVoiceEnterStateDisengage
	VoiceEnterStateRetreatToCastle				= WRElitesVoiceEnterStateMoveCamp

	SoundImpact 								= ImpactHorse

	UnitSpecificSounds
		VoiceEnterStateInitiateCaptureBuilding	= WRElitesVoiceMove
		VoiceEnterUnitElvenTransportShip		= WRElitesVoiceGarrison
		VoiceGarrison							= WRElitesVoiceGarrison   
		VoiceInitiateCaptureBuilding			= WRElitesVoiceMove	; From SpecialPower SpecialAbilityCaptureBuilding
		; VoicePrimaryWeaponMode					= ElvenWarriorVoiceModeBow
		; VoiceSecondaryWeaponMode				= ElvenWarriorVoiceModeSword
		; VoiceMoveToTrees						= RivendellElfVoiceMoveForest				
		; VoiceEnterStateMoveToTrees				= RivendellElfVoiceEnterStateMoveForest		
	End

	CrowdResponseKey = Elf

	UnitSpecificSounds
		VoiceEnterStateInitiateCaptureBuilding	= ElfMirkwoodArcherVoiceEnterStateCaptureBuilding
		VoiceEnterUnitElvenTransportShip		= ElfMirkwoodArcherVoiceMoveShip
		VoiceGarrison         					= ElfMirkwoodArcherVoiceMoveGarrison
		VoiceInitiateCaptureBuilding			= ElfMirkwoodArcherVoiceCaptureBuilding				; From SpecialPower SpecialAbilityCaptureBuilding
		VoiceMoveToTrees						= ElfMirkwoodArcherVoiceMoveForest
		VoiceEnterStateMoveToTrees				= ElfMirkwoodArcherVoiceEnterStateMoveForest
	End

	ClientBehavior = ModelConditionAudioLoopClientBehavior ModuleTag_foo
		ModelCondition = Required:EMOTION_CELEBRATING	Excluded:DYING ENGAGED	Sound:EmotionElfCompilationVoxCheerSinglesLoop	;MOVING ATTACKING 
		ModelCondition = Required:EMOTION_TAUNTING		Excluded:DYING ENGAGED	Sound:EmotionElfCompilationVoxTauntSinglesLoop	;MOVING ATTACKING
		ModelCondition = Required:EMOTION_POINTING		Excluded:DYING ENGAGED	Sound:EmotionElfCompilationVoxTauntSinglesLoop
		ModelCondition = Required:RAISING_FLAG			Excluded:DYING ENGAGED	Sound:EmotionElfCompilationVoxTauntSinglesLoop
	End

    #include "..\..\..\includes\StandardUnitEvaEvents.inc"

	; Tie into LargeGroupAudio system
	Behavior = LargeGroupAudioUpdate ModuleTag_LGAU
		Key = Humanoid_Male Elf Elf_Male Unit Infantry Elf_MirkwoodArcher
	End


	; *** ENGINEERING Parameters ***

	RadarPriority = UNIT
	KindOf = PRELOAD SELECTABLE CAN_CAST_REFLECTIONS INFANTRY PATH_THROUGH_EACH_OTHER SCORE THROWN_OBJECT GRAB_AND_DROP BANNER IGNORES_SELECT_ALL
	
	Body = ActiveBody ModuleTag_02
	    CheerRadius 	  = EMOTION_CHEER_RADIUS
		MaxHealth         = GONDOR_BANNER_HEALTH
		MaxHealthDamaged  = GONDOR_BANNER_HEALTH_DAMAGED
		BurningDeathBehavior = Yes
		BurningDeathFX       = FX_InfantryBurningFlame
	End
	
	Behavior = AIUpdateInterface ModuleTag_03
		AutoAcquireEnemiesWhenIdle = Yes ATTACK_BUILDINGS STEALTHED
		MoodAttackCheckRate        = 500
		AttackPriority				= 	AttackPriority_Infantry
		AILuaEventsList				=	MirkwoodRoyalBannerFunctions
		BurningDeathTime				= BURNINGDEATH_DURATION_INFANTRY
	End

	Behavior = EmotionTrackerUpdate	Module_EmotionTracker
		TauntAndPointDistance		=	INFANTRY_TAUNT_POINT_RADIUS		; max distance to taunted/pointed objet
		TauntAndPointUpdateDelay	=	1000	; how often scan (milliseconds)
		TauntAndPointExcluded		=	NONE
		AfraidOf					=	AOTR_EMOTION_AFRAIDOF_OBJECTFILTER
		AlwaysAfraidOf				=	EMOTION_ALWAYS_AFRAIDOF_OBJECTFILTER
		PointAt						=	EMOTION_POINTAT_OBJECTFILTER

		HeroScanDistance			=	150
		FearScanDistance			=	INFANTRY_FEAR_SCAN_RADIUS

		AddEmotion	=	Terror_Base
		AddEmotion	=	Doom_Base
		AddEmotion	=   BraceForBeingCrushed_Base
		AddEmotion	=	UncontrollableFear_Base_Evil
		AddEmotion	=	FearIdle_Base
		AddEmotion	=	FearBusy_Base
		AddEmotion	=	Point_Base
		AddEmotion	=	Taunt_Base	
		AddEmotion	=	CheerIdle_Base
		AddEmotion	=	CheerBusy_Base
		AddEmotion	=	HeroCheerIdle_Base
		AddEmotion	=	HeroCheerBusy_Base
		AddEmotion	=	Alert_Base
	End	

	LocomotorSet
		Locomotor = HumanLocomotor
		Condition = SET_NORMAL 
		Speed     = NORMAL_FOOT_FAST_MEMBER_SPEED
	End

	LocomotorSet
		Locomotor = HumanWanderLocomotor
		Condition = SET_WANDER 
		Speed     = NORMAL_FOOT_FAST_MEMBER_SPEED
	End
	
	LocomotorSet
		Locomotor = BurningDeathLocomotorInfantry
		Condition = SET_BURNINGDEATH
		Speed	  = BURNINGDEATH_WANDERSPEED_INFANTRY
	End

	Behavior = PhysicsBehavior ModuleTag_04
		GravityMult = 1.0
		ShockStunnedTimeLow		= 1400	;msec
		ShockStunnedTimeHigh	= 2400	;msec
		ShockStandingTime		= 666	;msec
	End
	
	Behavior = SlowDeathBehavior ModuleTag_05
		DeathTypes = ALL -KNOCKBACK
		SinkDelay = 3000
		SinkRate = 0.40     ; in Dist/Sec
		DestructionDelay = 8000
		Sound = INITIAL SindarElfGenericVoiceDie
	End
	
	Behavior = SquishCollide ModuleTag_06
		;nothing
	End

	;/////////////////////////////////////////////////////////
	;// BannerCarrierUpdate module
	;/////////////////////////////////////////////////////////
	Behavior = BannerCarrierUpdate BannerCarrierUpdateModuleTag
		IdleSpawnRate			= 10000							; spawn a new member every n seconds when idle (in miliseconds)
		MeleeFreeUnitSpawnTime		= 20000							; n miliseconds units must not have been fighting to be able to spawn units when idle (in miliseconds)
		DiedRespawnTime			= 10000							; how much time must pass after Banner Carrier dies before horde can spawn another
		MeleeFreeBannerReSpawnTime	= 20000							; how much time since horde has been fighting before a new Banner Carrier can be respawned
		
		BannerMorphFX		= FX_HordeResurrectionWithBannerCarrierSFX	; name of particle FX to use when the BannerCarrier morphs into the dest unit type
		UnitSpawnFX			= FX_HordeResurrection						; name of particle FX to use when the BannerCarrier spawns a new unit
		
	End

	;Behavior = AutoHealBehavior ModuleTag_HealHordeMembers
	;	HealOnlyIfNotInCombat	= Yes
	;	StartsActive		= Yes
	;	HealingAmount		= 6 ;8 ;;,;; 10
	;	HealingDelay		= 2000
	;	KindOf				= INFANTRY CAVALRY
	;	UnitHealPulseFX		= FX_SpellHealUnitHealBuff
	;	AffectsContained	= Yes
	;	NonStackable		= Yes
	;End

	Behavior = SlowDeathBehavior ModuleTag_07
		; Same as normal death, but no sound (sound already played by SoundImpact = ... )
		DeathTypes = NONE +KNOCKBACK
		SinkDelay = 3000
		SinkRate = 0.40     ; in Dist/Sec
		DestructionDelay = 8000
	End

	Behavior = BezierProjectileBehavior ModuleTag_08 ; Module starts asleep, and wakes up when thrown.
		; To tweak a Bezier path
		FirstHeight = 24  ; Height of Bezier control points above highest intervening terrain
		SecondHeight = 24
		FirstPercentIndent = 30% ; Percentage of shot distance control points are placed
		SecondPercentIndent = 70%
		TumbleRandomly = Yes

		CrushStyle = Yes ; I don't detonate, I just hit
		DieOnImpact = Yes
		BounceCount = 1   ; When I hit the ground, I'll arc again
		BounceDistance = 40 ; this far
		BounceFirstHeight = 24  ; Height of Bezier control points above highest intervening terrain
		BounceSecondHeight = 24
		BounceFirstPercentIndent = 20% ; Percentage of shot distance control points are placed
		BounceSecondPercentIndent = 80%

		GroundHitFX       = FX_ThrownRockGroundHit
		GroundBounceFX    = FX_ThrownRockBounceHit
	End

	Behavior = HitReactionBehavior HitReactionBehaviorModuleTag
		HitReactionLifeTimer1 = 7 ; level 1 (light  damage)  hit reaction animations in frames (5 per sec)
		HitReactionLifeTimer2 = 15 ; level 2 (medium damage)  hit reaction animations in frames (5 per sec)
		HitReactionLifeTimer3 = 10 ; level 3 (heavy  damage)  hit reaction animations in frames (5 per sec)

		HitReactionThreshold1 = 0.0   ; level 1 (light  damage) threshold trigger
		HitReactionThreshold2 = 25.0  ; level 2 (medium damage) threshold trigger
		HitReactionThreshold3 = 50.0  ; level 3 (heavy  damage) threshold trigger
	End
	
Scale = 1.10
	Geometry = CYLINDER
	GeometryMajorRadius = 4
	GeometryMinorRadius = 4
	GeometryHeight = 19.2
	GeometryIsSmall = Yes
  Shadow = SHADOW_DECAL
  ShadowSizeX = 19;
  ShadowSizeY = 19;
  ShadowTexture = ShadowI;
End